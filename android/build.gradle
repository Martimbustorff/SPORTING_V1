// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '33.0.0'
        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '21')
        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '33')
        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '33')
        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.8.10'
        frescoVersion = findProperty('expo.frescoVersion') ?: '2.5.0'
        ndkVersion = "23.1.7779620"
    }

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.google.firebase:perf-plugin:1.4.2'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.2'
        classpath 'com.google.gms:google-services:4.3.3'
        classpath 'com.android.tools.build:gradle:7.4.2'
        classpath 'com.facebook.react:react-native-gradle-plugin'
    }
}

allprojects {
    repositories {
        maven {
            // React Native artifacts from npm
            url new File(['node', '--print', "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim(), '../android')
        }
        maven {
            // JavaScriptCore artifacts from npm
            url new File(['node', '--print', "require.resolve('jsc-android/package.json')"].execute(null, rootDir).text.trim(), '../dist')
        }

        google()
        mavenCentral()
        maven { url 'https://www.jitpack.io' }
    }
}

// Safely configuring task dependencies for `expo-constants`
subprojects {
    afterEvaluate { subproject ->
        if (subproject.name == "expo-constants") {
            // Configure only if the tasks are available
            subproject.tasks.matching { it.name == "packageDebugAssets" }.all {
                dependsOn("copyReleaseExpoConfig")
            }
            subproject.tasks.matching { it.name == "packageReleaseAssets" }.all {
                dependsOn("copyReleaseExpoConfig")
            }
        }
    }
}
